p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = dane_zliczone, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = dane_zliczone, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = dane_zliczone, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = dane_zliczone, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = dane_zliczone, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = dane_zliczone, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(CZY_KIER, PYT_2, STAŻ))
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(CZY_KIER ~ PYT_2 + STAŻ, data = df))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = dane_zliczone, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = dane_zliczone, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = dane_zliczone, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = dane_zliczone, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = dane_zliczone, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = dane_zliczone, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAŻ))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = dane_zliczone, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = dane_zliczone, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = dane_zliczone, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = dane_zliczone, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = dane_zliczone, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = dane_zliczone, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = dane_zliczone, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = dane_zliczone, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = dane_zliczone, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = dane_zliczone, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = dane_zliczone, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = dane_zliczone, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
model_13 = glm(Freq ~ CZY_KIER * STAŻ + PYT_2, family = poisson, data = tab_8)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAŻ))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAŻ, data = tab_8, family = poisson)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAŻ))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAZ))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tab_8, family = poisson)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAZ))
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
colnames(tab_8)
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tab_8, family = poisson)
dane <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(dane) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1', 'PYT_2', 'PYT_3', 'PLEC', 'WIEK')
library(dplyr)
dane_zliczone <- dane %>%
group_by(CZY_KIER, PYT_2, STAZ) %>%
summarise(Freq = n(), .groups = "drop")
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = dane_zliczone, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = dane_zliczone, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = dane_zliczone, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = dane_zliczone, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = dane_zliczone, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = dane_zliczone, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = dane_zliczone, family = poisson)
)
#wyciagamy ze slownika
model_12 <- models$model_12
model_13 <- models$model_13
model_23 <- models$model_23
model_12_13 <- models$model_12_13
model_12_23 <- models$model_12_23
model_13_23 <- models$model_13_23
model_12_13_23 <- models$model_12_13_23
model_123 <- models$model_123
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = dane_zliczone, family = poisson)
models_a <- list(
"[12 13]" = model_12_13,
"[13 23]" = model_13_23,
"[123]" = model_123,
"[12 13 23]" = model_12_13_23
)
results_a <- anova_nadmodel(models_a, model_1_2_3)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAZ))
colnames(tab_8) <- c("CZY_KIER", "PYT_2", "STAŻ", "Freq")
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
colnames(tab_8)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAZ))
colnames(tab_8) <- c("CZY_KIER", "PYT_2", "STAZ", "Freq")
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
colnames(tab_8)
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tab_8, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tab_8, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tab_8, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = tab_8, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = tab_8, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = tab_8, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = tab_8, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = tab_8, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
model_13 = glm(Freq ~ CZY_KIER * STAŻ + PYT_2, family = poisson, data = tab_8)
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, family = poisson, data = tab_8)
models <- list(
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tab_8, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tab_8),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_13, models)
model_13_23 = glm(Freq ~ CZY_KIER * STAŻ + PYT_2 * STAŻ, data = tab_8, family = poisson)
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8, family = poisson)
models <- list(
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tab_8),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_13_23, models)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
dane <- df
char_col <- sapply(df, is.character)
df[ ,char_col] <- lapply(df[ ,char_col], as.factor)
sum = sum(is.na(df))
if (sum != 0){na_coords <- which(is.na(df), arr.ind = TRUE)
apply(na_coords, 1, function(x) paste0("(", x[1], ", ", x[2], ")"))}
roundandformat <- function(x, d) {
formatC(x, format = "f", digits = d)
}
tab_8 <- data.frame(ftable(dane$CZY_KIER, dane$PYT_2, dane$STAZ))
colnames(tab_8) <- c("CZY_KIER", "PYT_2", "STAZ", "Freq")
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
colnames(tab_8)
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tab_8, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tab_8, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tab_8, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = tab_8, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = tab_8, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = tab_8, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = tab_8, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = tab_8, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_1_2_3, models)
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, family = poisson, data = tab_8)
models <- list(
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tab_8, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tab_8),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_13, models)
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8, family = poisson)
models <- list(
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tab_8),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
)
anova_nadmodel(model_13_23, models)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(gmodels)) install.packages("gmodels")
if (!require(DescTools)) install.packages("DescTools")
if (!require(nnet)) install.packages("nnet")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
p_wartosc_warunkowy_test_symetrii<- function(tabela){
n1 <- tabela[1,2]
n2 <- tabela[2,1]
n <- n1 + n2
p <- 0
if(n1 < n/2){
for (i in 1:n1) {
p <- p + choose(n, i) * (0.5)^i * (0.5)^(n - i)
}
}else if(n1 > n/2){
for (i in n1:n) {
p <- p + choose(n, i) * (0.5)^i * (0.5)^(n - i)
}
}else{
p <- 1
}
return(list(p_value = p))
}
library(knitr)
tabela_zad_2 <- matrix(c(1, 2, 5, 4),
nrow = 2,
byrow = FALSE,
dimnames = list(
c("Negatywna", "Pozytywna"),
c("Negatywna", "Pozytywna")
))
kable(tabela_zad_2, caption = "Reakcja na lek A vs lek B")
mcnemar.test(tabela_zad_2, correct=TRUE)
p_wartosc_warunkowy_test_symetrii(tabela_zad_2)
test_z <- function(tabela_n){
n <-  sum(tabela_n)
tabela_p <- tabela_n / n
p_1sum <- sum(tabela_p[1,])
p_sum1 <- sum(tabela_p[,1])
D <- (tabela_n[1,2]-tabela_n[2,1])/n
sigma_k <- (p_1sum * (1-p_1sum) + p_sum1 * (1-p_sum1) - 2*(tabela_p[1,1] * tabela_p[2,2] - tabela_p[1,2] * tabela_p[2,1]))/n
z <- D/sqrt(sigma_k)
p_value <- 2 * (1-pnorm(abs(z)))
return(p_value)
}
test_Z0 <- function(tabela){
n12 <- tabela[1,2]
n21 <- tabela[2,1]
z0 <- (n12 - n21)/sqrt(n12 + n21)
p_value <- 2*(1 - pnorm(abs(z0)))
return(p_value)
}
generate_table <- function(n, p12, p21) {
n12 <- rbinom(1, n, p12)
n21 <- rbinom(1, n, p21)
n11 <- floor((n - n12 - n21) / 2)
n22 <- n - n12 - n21 - n11
tabela <- matrix(c(n11, n12, n21, n22), nrow = 2, byrow = TRUE)
return(tabela)
}
power_sim_test <- function(n, p12, p21, test, alpha = 0.05, B = 10000) {
rej <- 0
for(i in 1:B) {
tabela <- generate_table(n, p12, p21)
p_val <- test(tabela)
if(p_val < alpha) rej <- rej + 1
}
power <- rej / B
return(power)
}
alpha <- 0.05
B <- 1000
p21 <- 0.5
p12_values <- seq(0, 1, by = 0.05)
n_values <- c(50, 100, 200, 500)  # różne rozmiary próby
results <- data.frame()
for(n in n_values) {
for(p12 in p12_values) {
power <- power_sim_test(n, p12, p21, test_z, alpha, B)
results <- rbind(results, data.frame(n = n, p12 = p12, power = power))
}
}
# Kolory do wykresu
cols <- c("red", "blue", "green3", "purple")
# Otwieramy nowe okno graficzne o większych rozmiarach
windows(width = 10, height = 7)  # szerokość 10, wysokość 7 (domyślnie to ~7x7)
par(mar = c(5, 4, 4, 8), xpd = TRUE)
# Rysujemy pusty wykres
plot(NULL, xlim = c(0, 1), ylim = c(0, 1),
xlab = expression(p[1]),
ylab = "Moc testu (power)",
main = expression("Moc testu Z dla różnych n"))
# Linie dla różnych n
for(i in seq_along(n_values)) {
subset_data <- subset(results, n == n_values[i])
lines(subset_data$p12, subset_data$power, col = cols[i], lwd = 2)
}
par(xpd = FALSE)
abline(h = 0.05, lty = 2, col = "darkgray")
abline(v = 0.5, lty = 2, col = "darkgray")
par(xpd = TRUE)
legend("topright", inset = c(-0.25, 0),
legend = paste("n =", n_values),
col = cols, lwd = 2, bty = "n")
results <- data.frame()
for(n in n_values) {
for(p12 in p12_values) {
power <- power_sim_test(n, p12, p21, test_Z0, alpha, B)
results <- rbind(results, data.frame(n = n, p12 = p12, power = power))
}
}
# Otwórz większe okno graficzne
windows(width = 10, height = 7)
# Kolory do wykresu
cols <- c("red", "blue", "green3", "purple")
par(mar = c(5, 4, 4, 8), xpd = TRUE)
# Rysujemy pusty wykres z zakresami i opisami
plot(NULL, xlim = c(0,1), ylim = c(0,1),
xlab = expression(p[1]),
ylab = "Moc testu (power)",
main = expression("Moc testu " * Z[0] * " dla różnych n"))
# Rysujemy linie dla różnych n
for(i in seq_along(n_values)) {
subset_data <- subset(results, n == n_values[i])
lines(subset_data$p12, subset_data$power, col = cols[i], lwd = 2)
}
par(xpd = FALSE)
# Dodajemy przerywane linie pomocnicze
abline(h = 0.05, lty = 2, col = "darkgray")  # linia pozioma
abline(v = 0.5, lty = 2, col = "darkgray")   # linia pionowa
par(xpd = TRUE)
# Dodajemy legendę
legend("topright", inset = c(-0.25, 0),
legend = paste("n =", n_values),
col = cols, lwd = 2, bty = "n")
