p0 <- p0_values[i]
statistic <- statistic + x*log(x/(n*p0))
}
statistic = 2*statistic
p_value <- 1 - pchisq(statistic, df = length(x_values) - 1)
return(p_value)
}
x_fisher <- matrix(c(8, 2, 1, 5), nrow = 2)
x_freeman_halton <- matrix(1:6, nrow = 2, ncol = 3)
freeman_halton_test <- fisher.test(x_freeman_halton, y = NULL, workspace = 200000, hybrid = FALSE, hybridPars = c(expect = 5, percent = 80, Emin = 1), control = list(), or = 1, alternative = "two.sided", conf.int = TRUE, conf.level = 0.95, simulate.p.value = FALSE, B = 2000)
fisher_test <- fisher.test(x_fisher, y = NULL, workspace = 200000, hybrid = FALSE, hybridPars = c(expect = 5, percent = 80, Emin = 1), control = list(), or = 1, alternative = "two.sided", conf.int = TRUE, conf.level = 0.95, simulate.p.value = FALSE, B = 2000)
freeman_halton_test
fisher_test
tabela <- table(df$PŁEĆ, df$CZY_KIER)
fisher.test(tabela)
df$CZY_ZADOW <- cut(df$PYT_2,
breaks = c(-3, 0, 2),
labels = c('NIE', 'TAK'))
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
attach(df)
# Tworzymy tabelę kontyngencji
tabela <- table(df$PKT_2, df$CZY_KIER)
# Tworzymy tabelę kontyngencji
tabela <- table(df$PYT_2, df$CZY_KIER)
# Test chi-kwadrat
test <- chisq.test(tabela)
# Wyświetlenie wyników testu
print(test)
# Wyświetlenie reszt standaryzowanych
print(test$stdres)
# Wykres asocjacyjny
assocplot(tabela, main = "Wykres asocjacyjny: PKT_2 vs CZY_KIER")
# Tworzymy tabelę kontyngencji
tabela <- table(df$PYT_2, df$CZY_KIER)
# Test chi-kwadrat
test <- chisq.test(tabela)
# Wyświetlenie wyników testu
print(test)
# Wyświetlenie reszt standaryzowanych
print(test$stdres)
# Wykres asocjacyjny
assocplot(tabela, main = "Wykres asocjacyjny: PKT_2 vs CZY_KIER")
moc_testu <- function(n, p, N = 500, alpha = 0.05, test = "chisq") {
sukcesy <- 0
for (i in 1:N) {
x <- rmultinom(1, n, p)
macierz <- matrix(x, nrow = 2, byrow = TRUE)
if (test == "chisq") {
pval <- chisq.test(macierz, simulate.p.value = FALSE)$p.value
} else if (test == "fisher") {
pval <- fisher.test(macierz)$p.value
}
if (pval < alpha) {
sukcesy <- sukcesy + 1
}
}
return(sukcesy / N)
}
p <- c(1, 3, 19, 17) / 40
moc_testu(50, p, test = "chisq")     # dla chi-kwadrat
moc_testu <- function(n, p, N = 500, alpha = 0.05, test = "chisq") {
sukcesy <- 0
for (i in 1:N) {
x <- rmultinom(1, n, p)
macierz <- matrix(x, nrow = 2, byrow = TRUE)
if (test == "chisq") {
wynik <- suppressWarnings(chisq.test(macierz, simulate.p.value = FALSE))
pval <- wynik$p.value
} else if (test == "fisher") {
wynik <- fisher.test(macierz)
pval <- wynik$p.value
}
if (!is.na(pval) && pval < alpha) {
sukcesy <- sukcesy + 1
}
}
return(sukcesy / N)
}
p <- c(1, 3, 19, 17) / 40
moc_testu(50, p, test = "chisq")
moc_testu <- function(n, p, N = 500, alpha = 0.05, test = "chisq") {
sukcesy <- 0
for (i in 1:N) {
x <- rmultinom(1, n, p)
macierz <- matrix(x, nrow = 2, byrow = TRUE)
if (test == "chisq") {
wynik <- suppressWarnings(chisq.test(macierz, simulate.p.value = FALSE))
pval <- wynik$p.value
} else if (test == "fisher") {
wynik <- fisher.test(macierz)
pval <- wynik$p.value
}
if (!is.na(pval) && pval < alpha) {
sukcesy <- sukcesy + 1
}
}
return(sukcesy / N)
}
p <- c(1, 3, 19, 17) / 40
moc_testu(50, p, test = "chisq")
moc_testu(50, p, test = "fisher")
moc_testu(100, p, test = "chisq")
moc_testu(100, p, test = "fisher")
moc_testu(1000, p, test = "chisq")
moc_testu(1000, p, test = "fisher")
moc_testu <- function(n, p, N = 500, alpha = 0.05, test = "chisq") {
sukcesy <- 0
for (i in 1:N) {
x <- rmultinom(1, n, p)
macierz <- matrix(x, nrow = 2, byrow = TRUE)
if (test == "chisq") {
wynik <- suppressWarnings(chisq.test(macierz, simulate.p.value = FALSE))
pval <- wynik$p.value
} else if (test == "fisher") {
wynik <- fisher.test(macierz)
pval <- wynik$p.value
}
if (!is.na(pval) && pval < alpha) {
sukcesy <- sukcesy + 1
}
}
return(sukcesy / N)
}
p <- c(1, 3, 19, 17) / 40
moc_testu(50, p, test = "chisq")
moc_testu(50, p, test = "fisher")
moc_testu(100, p, test = "chisq")
moc_testu(100, p, test = "fisher")
moc_testu(1000, p, test = "chisq")
moc_testu(1000, p, test = "fisher")
test_IW <- function(tabela) {
n <- sum(tabela)
wiersze <- rowSums(tabela)
kolumny <- colSums(tabela)
E <- outer(wiersze, kolumny, FUN = function(a, b) a * b / n)
G2 <- 2 * sum(tabela * log(tabela / E), na.rm = TRUE)
df <- (nrow(tabela) - 1) * (ncol(tabela) - 1)
p_value <- 1 - pchisq(G2, df)
return(list(G2 = G2, df = df, p_value = p_value))
}
tabela <- table(df$PYT_2, df$CZY_KIER)
test_IW(tabela)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
test_korelacji_odleglosci <- function(x, y, R = 499) {
wynik <- dcor.test(x, y, R = R)
return(wynik$p.value)
}
set.seed(123)
x <- rnorm(100)
y <- rnorm(100)
test_korelacji_odleglosci(x, y)
library(energy)
test_korelacji_odleglosci <- function(x, y, R = 499) {
wynik <- dcor.test(x, y, R = R)
return(wynik$p.value)
}
set.seed(123)
x <- rnorm(100)
y <- rnorm(100)
test_korelacji_odleglosci(x, y)
# p > 0.05 → nie odrzucamy H₀ (brak zależności)
x <- rnorm(100)
y <- x^2 + rnorm(100, 0, 0.1)
test_korelacji_odleglosci(x, y)
# p < 0.05 → odrzucamy H₀, zależność wykryta!
library(energy)
test_korelacji_odleglosci <- function(x, y, R = 499) {
wynik <- dcor.test(x, y, R = R)
return(wynik$p.value)
}
set.seed(123)
x <- rnorm(100)
y <- rnorm(100)
test_korelacji_odleglosci(x, y)
# p > 0.05 → nie odrzucamy H₀ (brak zależności)
x <- rnorm(100)
y <- x^2 + rnorm(100, 0, 0.1)
test_korelacji_odleglosci(x, y)
# p < 0.05 → odrzucamy H₀, zależność wykryta!
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
# Dane
counts <- c(14, 17, 40, 100, 29)
n <- sum(counts)
kategorie <- c("zdecyd. nie zgadz.",
"nie zgadz.", "nie mam zdania",
"zgadz.", "zdecyd. zgadzam")
estymatory <- counts / n
alpha<-0.05
# Przedziały ufności
results_cp <- binom.confint(x = counts,
n = n, conf.level =1-alpha/5,
methods = "exact")
results_wilson <- binom.confint(x = counts,
n = n, conf.level = 1-alpha/5,
methods = "wilson")
print(results_cp[c("x","lower","upper")])
print(results_wilson[c("x","lower","upper")])
testuj_hipoteze_multinomial <- function(x, p0) {
# Dane wejściowe:
# x  - wektor obserwacji (liczności)
# p0 - wektor hipotetycznych prawdopodobieństw
n <- sum(x)
k <- length(x)
expected <- n * p0
# Statystyka testu chi-kwadrat Pearsona
chisq_stat <- sum((x - expected)^2 / expected)
pval_chisq <- 1 - pchisq(chisq_stat, df = k - 1)
# Statystyka testu największej wiarygodności (G^2)
# Uwaga: 0*log(0) = 0, więc pomijamy tam gdzie xi = 0
nonzero <- x > 0
g2_stat <- 2 * sum(x[nonzero] * log(x[nonzero] / expected[nonzero]))
pval_g2 <- 1 - pchisq(g2_stat, df = k - 1)
# Wyniki w formie ramki danych
result <- data.frame(
Test = c("Chi-kwadrat Pearsona",
"Chi-kwadrat największej wiarygodności"),
Statystyka = round(c(chisq_stat, g2_stat), 4),
P_value = round(c(pval_chisq, pval_g2), 4)
)
return(result)
}
x <- c(14, 17, 40, 100, 29)
# Hipotetyczne prawdopodobieństwa (np. równe)
p0 <- rep(0.2, 5)
# Test
testuj_hipoteze_multinomial(x, p0)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
attach(df)
# 1. Filtrowanie pracowników z Działu Produktowego
df_prod <- subset(df, DZIAŁ == "PD")
# 2. Liczność odpowiedzi na PYT_1
x <- table(df_prod$PYT_1)
x <- as.numeric(x)  # upewniamy się, że to wektor liczbowy
# 3. Hipotetyczny równomierny rozkład
p0 <- rep(1/length(x), length(x))
# 4. Funkcja z zadania 2
testuj_hipoteze_multinomial(x, p0)
testuj_hipoteze_multinomial <- function(x, p0) {
# Dane wejściowe:
# x  - wektor obserwacji (liczności)
# p0 - wektor hipotetycznych prawdopodobieństw
n <- sum(x)
k <- length(x)
expected <- n * p0
chisq_stat <- sum((x - expected)^2 / expected)
pval_chisq <- 1 - pchisq(chisq_stat, df = k - 1)
nonzero <- x > 0
g2_stat <- 2 * sum(x[nonzero] * log(x[nonzero] / expected[nonzero]))
pval_g2 <- 1 - pchisq(g2_stat, df = k - 1)
result <- data.frame(
Test = c("Chi-kwadrat Pearsona",
"Chi-kwadrat największej wiarygodności"),
Statystyka = round(c(chisq_stat, g2_stat), 4),
P_value = round(c(pval_chisq, pval_g2), 4)
)
return(result)
}
x <- c(14, 17, 40, 100, 29)
p0 <- rep(0.2, 5)
testuj_hipoteze_multinomial(x, p0)
tablica <- matrix(c(10, 20, 30, 40), nrow = 2, byrow = TRUE)
chisq.test(tablica)
tablica <- matrix(c(10, 20, 30, 40), nrow = 2, byrow = TRUE)
chisq.test(tablica)
# Tworzymy tabelę kontyngencji
tabela <- table(df$PYT_2, df$CZY_KIER)
# Test chi-kwadrat
test <- chisq.test(tabela)
# Wyświetlenie wyników testu
print(test)
# Wyświetlenie reszt standaryzowanych
print(test$stdres)
# Wykres asocjacyjny
assocplot(tabela, main = "Wykres asocjacyjny: PKT_2 vs CZY_KIER")
# Tworzymy tabelę kontyngencji
tabela <- table(df$PYT_2, df$CZY_KIER)
# Test chi-kwadrat
test <- chisq.test(tabela)
# Wyświetlenie wyników testu
print(test)
# Wyświetlenie reszt standaryzowanych
print(test$stdres)
# Wykres asocjacyjny
assocplot(tabela, main = "Wykres asocjacyjny: PKT_2 vs CZY_KIER")
test_IW <- function(tabela) {
n <- sum(tabela)
wiersze <- rowSums(tabela)
kolumny <- colSums(tabela)
E <- outer(wiersze, kolumny, FUN = function(a, b) a * b / n)
G2 <- 2 * sum(tabela * log(tabela / E), na.rm = TRUE)
df <- (nrow(tabela) - 1) * (ncol(tabela) - 1)
p_value <- 1 - pchisq(G2, df)
return(list(G2 = G2, df = df, p_value = p_value))
}
tabela <- table(df$PYT_2, df$CZY_KIER)
test_IW(tabela)
test_IW <- function(tabela) {
n <- sum(tabela)
wiersze <- rowSums(tabela)
kolumny <- colSums(tabela)
E <- outer(wiersze, kolumny, FUN = function(a, b) a * b / n)
G2 <- 2 * sum(tabela * log(tabela / E), na.rm = TRUE)
df <- (nrow(tabela) - 1) * (ncol(tabela) - 1)
p_value <- 1 - pchisq(G2, df)
return(list(G2 = G2, df = df, p_value = p_value))
}
tabela <- table(df$PYT_2, df$CZY_KIER)
test_IW(tabela)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
counts <- c(14, 17, 40, 100, 29)
n <- sum(counts)
kategorie <- c("Bardzo niezadowolony", "Niezadowolony", "Nie ma zdania", "Zadowolony", "Bardzo zadowolony")
estymatory <- counts / n
alpha<-0.05
results_cp <- binom.confint(x = counts,
n = n, conf.level =1-alpha/5,
methods = "exact")
results_wilson <- binom.confint(x = counts,
n = n, conf.level = 1-alpha/5,
methods = "wilson")
results_wald <- binom.confint(x = counts,
n = n, conf.level = 1-alpha/5,
methods = "asymptotic")
print(results_cp[c("x","lower","upper")])
print(results_wilson[c("x","lower","upper")])
print(results_wald[c("x","lower","upper")])
library(binom)
counts <- c(14, 17, 40, 100, 29)
n <- sum(counts)
kategorie <- c("Bardzo niezadowolony", "Niezadowolony", "Nie ma zdania", "Zadowolony", "Bardzo zadowolony")
alpha <- 0.05
# Obliczenia
results_cp <- binom.confint(x = counts, n = n, conf.level = 1 - alpha / 5, methods = "exact")
results_wilson <- binom.confint(x = counts, n = n, conf.level = 1 - alpha / 5, methods = "wilson")
results_wald <- binom.confint(x = counts, n = n, conf.level = 1 - alpha / 5, methods = "asymptotic")
# Dodaj długość przedziału
results_cp$length <- results_cp$upper - results_cp$lower
results_wilson$length <- results_wilson$upper - results_wilson$lower
results_wald$length <- results_wald$upper - results_wald$lower
# Wyświetl interesujące kolumny
print(results_cp[c("x", "lower", "upper", "length")])
print(results_wilson[c("x", "lower", "upper", "length")])
print(results_wald[c("x", "lower", "upper", "length")])
testuj_hipoteze_multinomial <- function(x, p0) {
# Dane wejściowe:
# x  - wektor obserwacji (liczności)
# p0 - wektor hipotetycznych prawdopodobieństw
n <- sum(x)
k <- length(x)
expected <- n * p0
chisq_stat <- sum((x - expected)^2 / expected)
pval_chisq <- 1 - pchisq(chisq_stat, df = k - 1)
nonzero <- x > 0
g2_stat <- 2 * sum(x[nonzero] * log(x[nonzero] / expected[nonzero]))
pval_g2 <- 1 - pchisq(g2_stat, df = k - 1)
result <- data.frame(
Test = c("Chi-kwadrat Pearsona",
"Chi-kwadrat największej wiarygodności"),
Statystyka = round(c(chisq_stat, g2_stat), 4),
P_value = round(c(pval_chisq, pval_g2), 4)
)
return(result)
}
x <- c(14, 17, 40, 30, 29)
p0 <- rep(0.2, 5)
testuj_hipoteze_multinomial(x, p0)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
attach(df)
df_prod <- subset(df, DZIAŁ == "PD")
x <- table(df_prod$PYT_1)
x <- as.numeric(x)
p0 <- rep(1/length(x), length(x))
testuj_hipoteze_multinomial(x, p0)
df_prod <- subset(df, DZIAŁ == "PD")
x <- table(df_prod$PYT_1)
x <- as.numeric(x)
p0 <- c(0.2, 0.2, 0.2, 0.2, 0.2)
testuj_hipoteze_multinomial(x, p0)
df_prod <- subset(df, DZIAŁ == "PD")
x <- table(df_prod$PYT_1)
x <- as.numeric(x)
p0 <- c(0.2, 0.2, 0.2, 0.2, 0.2)
print(x)
#testuj_hipoteze_multinomial(x, p0)
counts_pyt1 <- tabulate(PYT_1 + 3, nbins = 5)
df_prod <- subset(df, DZIAŁ == "PD")
x <- table(df_prod$PYT_1)
x <- as.numeric(x)
p0 <- c(0.2, 0.2, 0.2, 0.2, 0.2)
print(x)
testuj_hipoteze_multinomial(x, p0)
testuj_hipoteze_multinomial <- function(x, p0, alpha = 0.05) {
# Dane wejściowe:
# x     - wektor obserwacji (liczności)
# p0    - wektor hipotetycznych prawdopodobieństw
# alpha - poziom istotności
n <- sum(x)
k <- length(x)
expected <- n * p0
df <- k - 1
# Statystyka testu chi-kwadrat Pearsona
chisq_stat <- sum((x - expected)^2 / expected)
pval_chisq <- 1 - pchisq(chisq_stat, df = df)
# Statystyka G² (największej wiarygodności)
nonzero <- x > 0
g2_stat <- 2 * sum(x[nonzero] * log(x[nonzero] / expected[nonzero]))
pval_g2 <- 1 - pchisq(g2_stat, df = df)
# Wartość krytyczna
critical_value <- qchisq(1 - alpha, df = df)
result <- data.frame(
Test = c("Chi-kwadrat Pearsona",
"Chi-kwadrat największej wiarygodności"),
Statystyka = round(c(chisq_stat, g2_stat), 4),
Wartosc_krytyczna = round(critical_value, 4),
P_value = round(c(pval_chisq, pval_g2), 4)
)
return(result)
}
# Przykład użycia:
x <- c(14, 17, 40, 30, 29)
p0 <- rep(0.2, 5)
testuj_hipoteze_multinomial(x, p0)
df <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(df) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1',
'PYT_2', 'PYT_3', 'PŁEĆ', 'WIEK')
attach(df)
df_prod <- subset(df, DZIAŁ == "PD")
x <- table(df_prod$PYT_1)
x <- as.numeric(x)
p0 <- c(0.2, 0.2, 0.2, 0.2, 0.2)
print(x)
testuj_hipoteze_multinomial(x, p0)
pv_chikwadrat = function (x, p0, test, alpha) {
k <- length(x)
n <- sum(x)
stat <- 0
if (test == "pearson") {
for (i in 1:k) {
stat <- stat + (x[i]-n*p0[i])^2/(n*p0[i])
}
}
else if (test == "iw") {
for (i in 1:k) {
stat <- stat + x[i]*log(x[i]/(n*p0[i]))
}
stat <- 2*stat
}
p_val <- 1 - pchisq(stat, k-1)
crit_val <- qchisq(1 - alpha, df = k - 1)
return(c(stat, p_val, crit_val))
}
x <- c(14, 17, 40, 30, 29)
p0 <- rep(0.2, 5)
pv_chikwadrat(x, p0,'pearson',0.05)
x <- c(14, 17, 40, 30, 29)
p0 <- rep(0.2, 5)
pv_chikwadrat(x, p0,'iw',0.05)
