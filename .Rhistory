)
) %>%
select(Opis, Dane, Model_123, Model_1223)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
# Wczytanie danych
dane <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(dane) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1', 'PYT_2', 'PYT_3', 'PLEC', 'WIEK')
# Ustawienie kolejności poziomów
dane$CZY_KIER <- factor(dane$CZY_KIER, levels = c("Nie", "Tak"))
dane$PYT_2 <- factor(dane$PYT_2, levels = as.character(-2:2))
dane$STAŻ <- factor(dane$STAŻ, levels = c("1", "2", "3"))
# Tworzymy data.frame z licznościami
tab_8 <- data.frame(ftable(CZY_KIER, PYT_2, STAZ))
# Dopasowanie modeli
model_123 <- glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
model_12_23 <- glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tab_8, family = poisson)
# Dopisanie dopasowanych liczności
tab_8$fitted_123 <- fitted(model_123)
tab_8$fitted_12_23 <- fitted(model_12_23)
# --- Obliczenie prawdopodobieństw ---
# 1. Kierownik zdecydowanie zadowolony ze szkoleń
prob_1 <- tab_8 %>%
filter(CZY_KIER == "Tak") %>%
summarise(
Dane = sum(Freq[PYT_2 == 2]) / sum(Freq),
Model_123 = sum(fitted_123[PYT_2 == 2]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[PYT_2 == 2]) / sum(fitted_12_23)
)
# 2. Staż <1 i kierownik
prob_2 <- tab_8 %>%
filter(STAZ == 1) %>%
summarise(
Dane = sum(Freq[CZY_KIER == "Tak"]) / sum(Freq),
Model_123 = sum(fitted_123[CZY_KIER == "Tak"]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[CZY_KIER == "Tak"]) / sum(fitted_12_23)
)
# 3. Staż >3 i brak kierowniczego
prob_3 <- tab_8 %>%
filter(STAZ == 3) %>%
summarise(
Dane = sum(Freq[CZY_KIER == "Nie"]) / sum(Freq),
Model_123 = sum(fitted_123[CZY_KIER == "Nie"]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[CZY_KIER == "Nie"]) / sum(fitted_12_23)
)
# Połączenie w jedną tabelę
tabela <- bind_rows(prob_1, prob_2, prob_3) %>%
mutate(
Opis = c(
"1. Kierownik zdecydowanie zadowolony ze szkoleń",
"2. Osoba o stażu krótszym niż rok jest kierownikiem",
"3. Osoba o stażu dłuższym niż 3 lata nie jest kierownikiem"
)
) %>%
dplyr::select(Opis, Dane, Model_123, Model_1223)
# Wyświetlenie tabeli
kable(
tabela,
col.names = c("Opis prawdopodobieństwa", "Dane", "Model [123]", "Model [12 23]"),
digits = 4,
align = "lccc",
caption = "Porównanie estymowanych prawdopodobieństw dla różnych modeli log-liniowych"
)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
# Wczytanie danych
dane <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(dane) <- c('DZIAŁ','STAŻ','CZY_KIER', 'PYT_1', 'PYT_2', 'PYT_3', 'PLEC', 'WIEK')
# Ustawienie kolejności poziomów
dane$CZY_KIER <- factor(dane$CZY_KIER, levels = c("Nie", "Tak"))
dane$PYT_2 <- factor(dane$PYT_2, levels = as.character(-2:2))
dane$STAŻ <- factor(dane$STAŻ, levels = c("1", "2", "3"))
# Tworzymy data.frame z licznościami
tab_8 <- data.frame(ftable(CZY_KIER, PYT_2, STAZ))
# Dopasowanie modeli
model_123 <- glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8, family = poisson)
model_12_23 <- glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tab_8, family = poisson)
# Dopisanie dopasowanych liczności
tab_8$fitted_123 <- fitted(model_123)
tab_8$fitted_12_23 <- fitted(model_12_23)
# --- Obliczenie prawdopodobieństw ---
# 1. Kierownik zdecydowanie zadowolony ze szkoleń
prob_1 <- tab_8 %>%
filter(CZY_KIER == "Tak") %>%
summarise(
Dane = sum(Freq[PYT_2 == 2]) / sum(Freq),
Model_123 = sum(fitted_123[PYT_2 == 2]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[PYT_2 == 2]) / sum(fitted_12_23)
)
# 2. Staż <1 i kierownik
prob_2 <- tab_8 %>%
filter(STAZ == 1) %>%
summarise(
Dane = sum(Freq[CZY_KIER == "Tak"]) / sum(Freq),
Model_123 = sum(fitted_123[CZY_KIER == "Tak"]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[CZY_KIER == "Tak"]) / sum(fitted_12_23)
)
# 3. Staż >3 i brak kierowniczego
prob_3 <- tab_8 %>%
filter(STAZ == 3) %>%
summarise(
Dane = sum(Freq[CZY_KIER == "Nie"]) / sum(Freq),
Model_123 = sum(fitted_123[CZY_KIER == "Nie"]) / sum(fitted_123),
Model_1223 = sum(fitted_12_23[CZY_KIER == "Nie"]) / sum(fitted_12_23)
)
# Połączenie w jedną tabelę
tabela <- bind_rows(prob_1, prob_2, prob_3) %>%
mutate(
Opis = c(
"1. Kierownik zdecydowanie zadowolony ze szkoleń",
"2. Osoba o stażu krótszym niż rok jest kierownikiem",
"3. Osoba o stażu dłuższym niż 3 lata nie jest kierownikiem"
)
) %>%
dplyr::select(Opis, Dane, Model_123, Model_1223)
# Wyświetlenie tabeli
kable(
tabela,
col.names = c("Opis prawdopodobieństwa", "Dane", "Model [123]", "Model [12 23]"),
digits = 4,
align = "lccc",
caption = "Porównanie estymowanych prawdopodobieństw dla różnych modeli log-liniowych"
)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
knitr::opts_chunk$set(echo = TRUE)
# Wczytaj dane
dane <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(dane) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1', 'PYT_2', 'PYT_3', 'PLEC', 'WIEK')
# Ustaw pełne poziomy, nawet jeśli część nie występuje w danych
dane$CZY_KIER <- factor(dane$CZY_KIER, levels = c("Nie", "Tak"))
dane$PYT_2    <- factor(dane$PYT_2, levels = as.character(-2:2))
dane$STAZ     <- factor(dane$STAZ, levels = c("1", "2", "3"))
# Tworzenie pełnej tablicy kontyngencji
tab<- xtabs(~ CZY_KIER + PYT_2 + STAZ, data = dane, drop.unused.levels = FALSE)
# Tablica kontyngencji
#tab <- xtabs(~ CZY_KIER + PYT_2 + STAZ, data = dane)
total <- sum(tab)
# Model 123
model_123 <- loglm(~ CZY_KIER * PYT_2 * STAZ, data = tab)
p_123 <- fitted(model_123) / total
# Model [12 23]
model_1223 <- loglm(~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tab)
p_1223 <- fitted(model_1223) / total
# ---- Prawdopodobieństwo 1 ----
# Kierownik zdecydowanie zadowolony ze szkoleń
emp1 <- sum(tab["Tak", "2", ]) / total
mod1_123 <- sum(p_123["Tak", "2", ])
mod1_1223 <- sum(p_1223["Tak", "2", ])
# ---- Prawdopodobieństwo 2 ----
# Osoba o stażu <1 jest kierownikiem = P(Tak | STAZ = 1)
emp2 <- sum(tab["Tak", , "1"]) / sum(tab[, , "1"])
mod2_123 <- sum(p_123["Tak", , "1"]) / sum(p_123[, , "1"])
mod2_1223 <- sum(p_1223["Tak", , "1"]) / sum(p_1223[, , "1"])
# ---- Prawdopodobieństwo 3 ----
# Osoba o stażu >3 NIE jest kierownikiem = P(Nie | STAZ = 3)
emp3 <- sum(tab["Nie", , "3"]) / sum(tab[, , "3"])
mod3_123 <- sum(p_123["Nie", , "3"]) / sum(p_123[, , "3"])
mod3_1223 <- sum(p_1223["Nie", , "3"]) / sum(p_1223[, , "3"])
# Tabela porównawcza
wyniki <- data.frame(
Opis = c(
"1. Kierownik zdecydowanie zadowolony ze szkoleń",
"2. Osoba o stażu krótszym niż rok jest kierownikiem",
"3. Osoba o stażu dłuższym niż 3 lata nie jest kierownikiem"
),
Dane = round(c(emp1, emp2, emp3), 5),
`[123]` = round(c(mod1_123, mod2_123, mod3_123), 5),
`[12 23]` = round(c(mod1_1223, mod2_1223, mod3_1223), 5)
)
# Formatowanie kolumn i nagłówków
colnames(wyniki) <- c("Opis prawdopodobieństwa", "Dane", "Model [123]", "Model [12 23]")
print(xtable(wyniki, digits = c(0, 0, 5, 5, 5)), include.rownames = FALSE, booktabs = TRUE, sanitize.text.function = identity)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
knitr::opts_chunk$set(echo = TRUE)
# Wczytaj dane
dane <- read.csv("ankieta.csv", sep = ";", fileEncoding = "Latin2")
colnames(dane) <- c('DZIAŁ','STAZ','CZY_KIER', 'PYT_1', 'PYT_2', 'PYT_3', 'PLEC', 'WIEK')
# Ustaw pełne poziomy, nawet jeśli część nie występuje w danych
dane$CZY_KIER <- factor(dane$CZY_KIER, levels = c("Nie", "Tak"))
dane$PYT_2    <- factor(dane$PYT_2, levels = as.character(-2:2))
dane$STAZ     <- factor(dane$STAZ, levels = c("1", "2", "3"))
# Tworzenie pełnej tablicy kontyngencji
tab<- xtabs(~ CZY_KIER + PYT_2 + STAZ, data = dane, drop.unused.levels = FALSE)
# Tablica kontyngencji
#tab <- xtabs(~ CZY_KIER + PYT_2 + STAZ, data = dane)
total <- sum(tab)
# Model 123
model_123 <- loglm(~ CZY_KIER * PYT_2 * STAZ, data = tab)
p_123 <- fitted(model_123) / total
# Model [12 23]
model_1223 <- loglm(~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tab)
p_1223 <- fitted(model_1223) / total
# ---- Prawdopodobieństwo 1 ----
# Kierownik zdecydowanie zadowolony ze szkoleń
emp1 <- sum(tab["Tak", "2", ]) / total
mod1_123 <- sum(p_123["Tak", "2", ])
mod1_1223 <- sum(p_1223["Tak", "2", ])
# ---- Prawdopodobieństwo 2 ----
# Osoba o stażu <1 jest kierownikiem = P(Tak | STAZ = 1)
emp2 <- sum(tab["Tak", , "1"]) / sum(tab[, , "1"])
mod2_123 <- sum(p_123["Tak", , "1"]) / sum(p_123[, , "1"])
mod2_1223 <- sum(p_1223["Tak", , "1"]) / sum(p_1223[, , "1"])
# ---- Prawdopodobieństwo 3 ----
# Osoba o stażu >3 NIE jest kierownikiem = P(Nie | STAZ = 3)
emp3 <- sum(tab["Nie", , "3"]) / sum(tab[, , "3"])
mod3_123 <- sum(p_123["Nie", , "3"]) / sum(p_123[, , "3"])
mod3_1223 <- sum(p_1223["Nie", , "3"]) / sum(p_1223[, , "3"])
# Tabela porównawcza
wyniki <- data.frame(
Opis = c(
"1. Kierownik zdecydowanie zadowolony ze szkoleń",
"2. Osoba o stażu krótszym niż rok jest kierownikiem",
"3. Osoba o stażu dłuższym niż 3 lata nie jest kierownikiem"
),
Dane = round(c(emp1, emp2, emp3), 5),
`[123]` = round(c(mod1_123, mod2_123, mod3_123), 5),
`[12 23]` = round(c(mod1_1223, mod2_1223, mod3_1223), 5)
)
# Formatowanie kolumn i nagłówków
colnames(wyniki) <- c("Opis prawdopodobieństwa", "Dane", "Model [123]", "Model [12 23]")
print(xtable(wyniki, digits = c(0, 0, 5, 5, 5)), include.rownames = FALSE, booktabs = TRUE, sanitize.text.function = identity)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
library(MASS)
# Tabela 3D
tablica <- xtabs(~ CZY_KIER + PYT_2 + STAZ, data = dane)
# HIPOTEZA 1: CZY_KIER, PYT_2, STAZ są wzajemnie niezależne
# model z samymi efektami głównymi
fit_H1 <- loglm(~ CZY_KIER + PYT_2 + STAZ, data = tablica)
# HIPOTEZA 2: PYT_2 niezależna od pary (CZY_KIER, STAZ)
# tzn. model zawiera interakcję CZY_KIER:STAZ, ale nie z PYT_2
fit_H2 <- loglm(~ CZY_KIER * STAZ + PYT_2, data = tablica)
# HIPOTEZA 3: PYT_2 ⊥ CZY_KIER | STAZ — niezależność warunkowa
# tzn. dozwolona interakcja PYT_2:STAZ, ale nie CZY_KIER:PYT_2
fit_H3 <- loglm(~ PYT_2 * STAZ + CZY_KIER * STAZ, data = tablica)
# Zbieramy wyniki
hipotezy <- c("H1: całkowita niezależność",
"H2: PYT_2 niezależna od (CZY_KIER, STAZ)",
"H3: PYT_2 ⊥ CZY_KIER | STAZ")
results <- data.frame(
Hipoteza = hipotezy,
Deviance = c(fit_H1$deviance, fit_H2$deviance, fit_H3$deviance),
DF = c(fit_H1$df, fit_H2$df, fit_H3$df),
p_value = c(
round(pchisq(fit_H1$deviance, df = fit_H1$df, lower.tail = FALSE), 4),
round(pchisq(fit_H2$deviance, df = fit_H2$df, lower.tail = FALSE), 4),
round(pchisq(fit_H3$deviance, df = fit_H3$df, lower.tail = FALSE), 4)
)
)
results
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
# zakładam, że masz tab_8 jako data.frame z Freq
# Modele
modele <- list(
"[12 13]"     = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAŻ, data = tablica),
"[13 23]"     = loglm(Freq ~ CZY_KIER * STAŻ + PYT_2 * STAŻ, data = tablica),
"[12 23]"     = loglm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAŻ, data = tablica),
"[12 13 23]"  = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAŻ + PYT_2 * STAŻ, data = tablica),
"[123]"       = loglm(Freq ~ CZY_KIER * PYT_2 * STAŻ, data = tablica),
"[13 2]"      = loglm(Freq ~ CZY_KIER * STAŻ + PYT_2, data = tablica),
"[1 23]"      = loglm(Freq ~ CZY_KIER + PYT_2 * STAŻ, data = tablica),
"[12 3]"      = loglm(Freq ~ CZY_KIER * PYT_2 + STAŻ, data = tablica)
)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
# zakładam, że masz tab_8 jako data.frame z Freq
# Modele
modele <- list(
"[12 13]"     = loglm(~ CZY_KIER * PYT_2 + CZY_KIER * STAŻ, data = tablica),
"[13 23]"     = loglm(~ CZY_KIER * STAŻ + PYT_2 * STAŻ, data = tablica),
"[12 23]"     = loglm(~ CZY_KIER * PYT_2 + PYT_2 * STAŻ, data = tablica),
"[12 13 23]"  = loglm(~ CZY_KIER * PYT_2 + CZY_KIER * STAŻ + PYT_2 * STAŻ, data = tablica),
"[123]"       = loglm(~ CZY_KIER * PYT_2 * STAŻ, data = tablica),
"[13 2]"      = loglm(~ CZY_KIER * STAŻ + PYT_2, data = tablica),
"[1 23]"      = loglm(~ CZY_KIER + PYT_2 * STAŻ, data = tablica),
"[12 3]"      = loglm(~ CZY_KIER * PYT_2 + STAŻ, data = tablica)
)
if (!require(knitr)) install.packages("knitr")
if (!require(readr)) install.packages("readr")
if (!require(latex2exp)) install.packages("latex2exp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(vctrs)) install.packages("vctrs")
if (!require(tidyr)) install.packages("tidyr")
if (!require(xtable)) install.packages("xtable")
if (!require(binom)) install.packages("binom")
if (!require(energy)) install.packages("energy")
if (!require(DescTools)) install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tablica, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tablica, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tablica, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = tablica, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = tablica, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = tablica, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = tablica, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = tablica, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
tabela <- data.frame(
Model = c("[12 13]", "[13 23]", "[12 23]", "[12 13 23]",
"[123]", "[13 2]", "[1 23]", "[12 3]"),
`p-wartość` = c(4.73e-05, 9.87e-06, 0.00163, 2.77e-05, 0.00062, 7.16e-05, 0.00559, 0.0397),
Wniosek = c(rep("Odrzucamy $H_0$", 8))
)
kable(tabela, caption = "Podsumowanie testów hipotez o niezależności", format = "markdown")
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, family = poisson, data = tablica)
models <- list(
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tablica, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tablica),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
tabela <- data.frame(
Model = c("[12 13]", "[13 23]", "[12 13 23]", "[123]"),
`p-wartość` = c(0.0397, 0.0056, 0.0104, 0.0810),
Wniosek = c("Odrzucamy $H_0$", "Odrzucamy $H_0$", "Odrzucamy $H_0$", "Brak podstaw do odrzucenia $H_0$")
)
kable(tabela, caption = "Podsumowanie testów hipotezy o niezależności PYT_2 od CZY_KIER i STAZ", format = "markdown")
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica, family = poisson)
models <- list(
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tablica),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
tabela <- data.frame(
Model = c("[12 13 23]", "[123]"),
`p-wartość` = c(0.349985, 0.8446445),
Wniosek = c("Brak podstaw do odrzucenia $H_0$", "Brak podstaw do odrzucenia $H_0$")
)
kable(tabela, caption = "Podsumowanie testów hipotezy o niezależności PYT_2 i STAZ", format = "markdown")
anova_nadmodel <- function(mi_0, mi_1s) {
p <- list()
for (i in seq_along(mi_1s)) {
x <- anova(mi_0, mi_1s[[i]], test = "Chisq")
p[[i]] <- 1 - pchisq(x$Deviance[2], x$Df[2])
}
names(p) <- names(mi_1s)
return(p)
}
model_1_2_3 = glm(Freq ~ CZY_KIER + PYT_2 + STAZ, data = tablica, family = poisson)
models <- list(
model_12 = glm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tablica, family = poisson),
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tablica, family = poisson),
model_23 = glm(Freq ~ PYT_2 * STAZ + CZY_KIER, data = tablica, family = poisson),
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 + STAZ, data = tablica, family = poisson),
model_12_23 = glm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ + CZY_KIER + STAZ, data = tablica, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ + CZY_KIER + PYT_2, data = tablica, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ , data = tablica, family = poisson),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
print(models)
model_13 = glm(Freq ~ CZY_KIER * STAZ + PYT_2, family = poisson, data = tablica)
models <- list(
model_12_13 = glm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tablica, family = poisson),
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica, family = poisson),
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tablica),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
print(models)
model_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica, family = poisson)
models <- list(
model_12_13_23 = glm(Freq ~ CZY_KIER * STAZ + PYT_2*STAZ + CZY_KIER*PYT_2, family = poisson, data = tablica),
model_123 = glm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica, family = poisson)
)
print(models)
summary_123 <- summary(model_123)
summary_full <- summary(model_full)
library(MASS)
library(dplyr)
library(xtable)
# Lista modeli (przykład)
modele <- list(
"[12 13]" = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tab_8),
"[13 23]" = loglm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8),
"[12 23]" = loglm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tab_8),
"[12 13 23]" = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ, data = tab_8),
"[123]" = loglm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tab_8),
"[13 2]" = loglm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tab_8),
"[1 23]" = loglm(Freq ~ CZY_KIER + PYT_2 * STAZ, data = tab_8),
"[12 3]" = loglm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tab_8)
)
# Wyciągnięcie p-wartości i zbudowanie tabeli
wyniki <- lapply(modele, function(m) {
p <- summary(m)$lrt["Pr(>Chi)"]
data.frame(`p.wartość` = formatC(p, format = "e", digits = 2),
Wniosek = ifelse(p < 0.05, "Odrzucamy $H_0$", "Brak podstaw do odrzucenia $H_0$"))
}) %>%
bind_rows(.id = "Model")
# Wyświetlenie w LaTeX
print(xtable(wyniki), include.rownames = FALSE, booktabs = TRUE, sanitize.text.function = identity)
library(MASS)
library(dplyr)
library(xtable)
# Lista modeli (przykład)
modele <- list(
"[12 13]" = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ, data = tablica),
"[13 23]" = loglm(Freq ~ CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica),
"[12 23]" = loglm(Freq ~ CZY_KIER * PYT_2 + PYT_2 * STAZ, data = tablica),
"[12 13 23]" = loglm(Freq ~ CZY_KIER * PYT_2 + CZY_KIER * STAZ + PYT_2 * STAZ, data = tablica),
"[123]" = loglm(Freq ~ CZY_KIER * PYT_2 * STAZ, data = tablica),
"[13 2]" = loglm(Freq ~ CZY_KIER * STAZ + PYT_2, data = tablica),
"[1 23]" = loglm(Freq ~ CZY_KIER + PYT_2 * STAZ, data = tablica),
"[12 3]" = loglm(Freq ~ CZY_KIER * PYT_2 + STAZ, data = tablica)
)
# Wyciągnięcie p-wartości i zbudowanie tabeli
wyniki <- lapply(modele, function(m) {
p <- summary(m)$lrt["Pr(>Chi)"]
data.frame(`p.wartość` = formatC(p, format = "e", digits = 2),
Wniosek = ifelse(p < 0.05, "Odrzucamy $H_0$", "Brak podstaw do odrzucenia $H_0$"))
}) %>%
bind_rows(.id = "Model")
# Wyświetlenie w LaTeX
print(xtable(wyniki), include.rownames = FALSE, booktabs = TRUE, sanitize.text.function = identity)
